
#page
  -unless @page.cats.empty?
    %h2==#{pluralize(@page.cats.size, 'cat')} more since you last viewed
    %a{:href=>"#", :onclick => "resetInterval()", :class => "btn"}Stop polling
    %a{:href=>"#", :onclick => "resetInterval()", :class => "btn"}Start polling
    %br
    %br
    #cats
      = render (@page.cats)



= link_to 'Edit', edit_page_path(@page)
\|
= link_to 'Back', pages_path

:javascript

  var timeout = 5000;

  $(function(){
    // console.log("Parse JSON railsbridge: " + #{@random_list});
    // var random_numbers = $.parseJSON('#{@random_list}');

    //console.log("Javascript: " + random_numbers);



    // if (($("#real-time-list").length > 0) && (random_numbers.length > 0)){
    //   var list_item = "<li>Current list of numbers: " +  random_numbers + " </li>"
    //   $('ul#real-time-list').append(list_item);
    // }

    // if ($("#default-list-item").length > 0){
    //   $('li#default-list-item').remove();
    // }

    setTimeout(updateItems, timeout);

  });

  function resetInterval(){
   if (timeout === 0)
   {
     console.log("WOOT! restarting!");
     timeout = 5000;
     setTimeout(updateItems, timeout);
   }
   else
   {
      console.log("Stopping for now.");
      timeout = 0;
   }
  }

  function updateItems(){
    if ($(".cat").length > 0) {
      var after = $("#cats:last-child").attr("data-time");
    }
    else{
      var after = "0";
    }

    $.getScript("/cats.js?after="+after);
    console.log("Timeout: " + timeout);
    if (timeout !== 0){
     setTimeout(updateItems, timeout);
    }
  }